{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-app\\\\workspace\\\\src\\\\GuGuDan.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GuGuDan extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = e => {\n      e.preventDefault();\n\n      if (parseInt(this.state.value) === this.state.first * this.state.second) {\n        this.setState(prevState => {\n          // setState에 새로운 state를 return 하는 함수를\n          // 넣어주면 바뀌기 전 state와 바뀐 후의 state의 비교가\n          // 쉽다?\n          return {\n            result: '정답 : ' + prevState.value,\n            first: Math.ceil(Math.random() * 9),\n            second: Math.ceil(Math.random() * 9),\n            value: ''\n          };\n        });\n      } else {\n        this.setState({\n          result: '땡',\n          value: ''\n        });\n      }\n    };\n\n    this.onChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      first: Math.ceil(Math.random() * 9),\n      second: Math.ceil(Math.random() * 9),\n      value: '',\n      result: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.first, \" \\uACF1\\uD558\\uAE30 \", this.state.second, \"\\uB294?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"answer\",\n          value: this.state.value,\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GuGuDan;","map":{"version":3,"sources":["D:/react-app/workspace/src/GuGuDan.js"],"names":["React","Component","GuGuDan","constructor","props","onSubmit","e","preventDefault","parseInt","state","value","first","second","setState","prevState","result","Math","ceil","random","onChange","target","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,QATmB,GASPC,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAIC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,KAAZ,CAAR,KAA+B,KAAKD,KAAL,CAAWE,KAAX,GAAmB,KAAKF,KAAL,CAAWG,MAAjE,EAAyE;AACrE,aAAKC,QAAL,CAAeC,SAAD,IAAe;AACzB;AACA;AACA;AACA,iBAAO;AACHC,YAAAA,MAAM,EAAE,UAAUD,SAAS,CAACJ,KADzB;AAEHC,YAAAA,KAAK,EAAEK,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CAFJ;AAGHN,YAAAA,MAAM,EAAEI,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CAHL;AAIHR,YAAAA,KAAK,EAAE;AAJJ,WAAP;AAMH,SAVD;AAWH,OAZD,MAYO;AACH,aAAKG,QAAL,CAAc;AACVE,UAAAA,MAAM,EAAE,GADE;AAEVL,UAAAA,KAAK,EAAE;AAFG,SAAd;AAIH;AACJ,KA7BkB;;AAAA,SA8BnBS,QA9BmB,GA8BPb,CAAD,IAAO;AACd,WAAKO,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEJ,CAAC,CAACc,MAAF,CAASV;AAAlB,OAAd;AACH,KAhCkB;;AAEf,SAAKD,KAAL,GAAa;AACTE,MAAAA,KAAK,EAAEK,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CADE;AAETN,MAAAA,MAAM,EAAEI,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CAFC;AAGTR,MAAAA,KAAK,EAAE,EAHE;AAITK,MAAAA,MAAM,EAAE;AAJC,KAAb;AAMH;;AAyBDM,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAA,mBAAM,KAAKZ,KAAL,CAAWE,KAAjB,0BAA6B,KAAKF,KAAL,CAAWG,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAE,KAAKP,QAArB;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,KAHtB;AAII,UAAA,QAAQ,EAAE,KAAKS;AAJnB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI;AAAA,kBAAM,KAAKV,KAAL,CAAWM;AAAjB;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAlD2B;;AAqDhC,eAAeb,OAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass GuGuDan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            first: Math.ceil(Math.random() * 9),\r\n            second: Math.ceil(Math.random() * 9),\r\n            value: '',\r\n            result: '',\r\n        }\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (parseInt(this.state.value) === this.state.first * this.state.second) {\r\n            this.setState((prevState) => {\r\n                // setState에 새로운 state를 return 하는 함수를\r\n                // 넣어주면 바뀌기 전 state와 바뀐 후의 state의 비교가\r\n                // 쉽다?\r\n                return {\r\n                    result: '정답 : ' + prevState.value,\r\n                    first: Math.ceil(Math.random() * 9),\r\n                    second: Math.ceil(Math.random() * 9),\r\n                    value: ''\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({\r\n                result: '땡',\r\n                value: ''\r\n            });\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ value: e.target.value });\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div>{this.state.first} 곱하기 {this.state.second}는?</div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"answer\"\r\n                        value={this.state.value}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <button>입력</button>\r\n                </form>\r\n                <div>{this.state.result}</div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GuGuDan;"]},"metadata":{},"sourceType":"module"}