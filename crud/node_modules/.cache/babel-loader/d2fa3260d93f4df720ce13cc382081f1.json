{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-app\\\\workspace\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Subject from \"./components/Subject\";\nimport TOC from \"./components/TOC\";\nimport ReadContent from \"./components/ReadContent\";\nimport CreateContent from \"./components/CreateContent\";\nimport UpdateContent from \"./components/UpdateContent\";\nimport Control from \"./components/Control\";\nimport './App.css'; // 리턴되는 것은 최상위 노드는 항상 하나만 존재해야한다.\n// App이라는 클래스 내부에서 사용할 정보들은 state로써 저장한다\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode: 'update',\n      selected_content_id: 2,\n      subject: {\n        title: 'WEB',\n        sub: 'world wide web'\n      },\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'HTML is for information'\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'CSS is for design'\n      }, {\n        id: 3,\n        title: 'JavaScript',\n        desc: 'JavaScript is for interactive'\n      }]\n    };\n  }\n\n  getReadContent() {\n    this.state.contents.forEach(content => {\n      if (content.id === this.state.selected_content_id) {\n        return content;\n      }\n    }); // var i = 0;\n    // while (i < this.state.contents.length) {\n    //   var data = this.state.contents[i]\n    //   if (data.id === this.state.selected_content_id) {\n    //     _title = data.title;\n    //     _desc = data.desc;\n    //     break;\n    //   }\n    //   i += 1;\n    // }\n  }\n\n  getContent() {\n    var _title,\n        _desc,\n        _article = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === 'read') {\n      var _content = this.getReadContent();\n\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _content.title,\n        desc: _content.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === 'create') {\n      _article = /*#__PURE__*/_jsxDEV(CreateContent, {\n        onSubmit: function (_title, _desc) {\n          this.max_content_id += 1; // 기존 state를 직접적으로 변경하는 것보단\n          // 기존에 새로운 데이터를 추가한 데이터를 반환받아 사용하는 것이 좋다.\n\n          var _contents = this.state.contents.concat({\n            id: this.max_content_id,\n            title: _title,\n            desc: _desc\n          });\n\n          this.setState({\n            contents: _contents\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === 'update') {\n      _article = /*#__PURE__*/_jsxDEV(UpdateContent, {\n        onSubmit: function (_title, _desc) {\n          this.max_content_id += 1; // 기존 state를 직접적으로 변경하는 것보단\n          // 기존에 새로운 데이터를 추가한 데이터를 반환받아 사용하는 것이 좋다.\n\n          var _contents = this.state.contents.concat({\n            id: this.max_content_id,\n            title: _title,\n            desc: _desc\n          });\n\n          this.setState({\n            contents: _contents\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 18\n      }, this);\n    }\n\n    return _article;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Subject, {\n        title: this.state.subject.title,\n        sub: this.state.subject.sub,\n        onChangePage: function () {\n          this.setState({\n            mode: 'welcome'\n          });\n        }.bind(this) // 사용자 정의 이벤트 설치  \n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TOC, {\n        onChangePage: function (id) {\n          this.setState({\n            mode: 'read',\n            selected_content_id: Number(id)\n          });\n        }.bind(this),\n        data: this.state.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        onChangeMode: function (_mode) {\n          this.setState({\n            mode: _mode\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), this.getContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react-app/workspace/src/App.js"],"names":["React","Component","Subject","TOC","ReadContent","CreateContent","UpdateContent","Control","App","constructor","props","max_content_id","state","mode","selected_content_id","subject","title","sub","welcome","desc","contents","id","getReadContent","forEach","content","getContent","_title","_desc","_article","_content","_contents","concat","setState","bind","render","Number","_mode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Subject from \"./components/Subject\"\nimport TOC from \"./components/TOC\"\nimport ReadContent from \"./components/ReadContent\"\nimport CreateContent from \"./components/CreateContent\"\nimport UpdateContent from \"./components/UpdateContent\"\nimport Control from \"./components/Control\"\nimport './App.css';\n\n// 리턴되는 것은 최상위 노드는 항상 하나만 존재해야한다.\n// App이라는 클래스 내부에서 사용할 정보들은 state로써 저장한다\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode: 'update',\n      selected_content_id: 2,\n      subject: { title: 'WEB', sub: 'world wide web' },\n      welcome: { title: 'Welcome', desc: 'Hello, React!!' },\n      contents: [\n        { id: 1, title: 'HTML', desc: 'HTML is for information' },\n        { id: 2, title: 'CSS', desc: 'CSS is for design' },\n        { id: 3, title: 'JavaScript', desc: 'JavaScript is for interactive' }\n      ]\n    }\n  }\n  getReadContent() {\n    this.state.contents.forEach(content => {\n      if (content.id === this.state.selected_content_id) {\n        return content;\n      }\n    })\n    // var i = 0;\n    // while (i < this.state.contents.length) {\n    //   var data = this.state.contents[i]\n    //   if (data.id === this.state.selected_content_id) {\n    //     _title = data.title;\n    //     _desc = data.desc;\n    //     break;\n    //   }\n    //   i += 1;\n    // }\n  }\n  getContent() {\n    var _title, _desc, _article = null;\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title\n      _desc = this.state.welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n    } else if (this.state.mode === 'read') {\n      var _content = this.getReadContent();\n      _article = <ReadContent title={_content.title} desc={_content.desc}></ReadContent>\n\n    } else if (this.state.mode === 'create') {\n      _article = <CreateContent onSubmit={function (_title, _desc) {\n        this.max_content_id += 1;\n        // 기존 state를 직접적으로 변경하는 것보단\n        // 기존에 새로운 데이터를 추가한 데이터를 반환받아 사용하는 것이 좋다.\n        var _contents = this.state.contents.concat(\n          { id: this.max_content_id, title: _title, desc: _desc }\n        );\n        this.setState({\n          contents: _contents\n        });\n      }.bind(this)}></CreateContent>\n    } else if (this.state.mode === 'update') {\n      _article = <UpdateContent onSubmit={function (_title, _desc) {\n        this.max_content_id += 1;\n        // 기존 state를 직접적으로 변경하는 것보단\n        // 기존에 새로운 데이터를 추가한 데이터를 반환받아 사용하는 것이 좋다.\n        var _contents = this.state.contents.concat(\n          { id: this.max_content_id, title: _title, desc: _desc }\n        );\n        this.setState({\n          contents: _contents\n        });\n      }.bind(this)}></UpdateContent>\n    }\n    return _article;\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Subject\n          title={this.state.subject.title}\n          sub={this.state.subject.sub}\n          onChangePage={function () {\n            this.setState({ mode: 'welcome' });\n          }.bind(this)}\n        // 사용자 정의 이벤트 설치  \n        ></Subject>\n        <TOC\n          onChangePage={function (id) {\n            this.setState({\n              mode: 'read',\n              selected_content_id: Number(id)\n            })\n          }.bind(this)}\n          data={this.state.contents}\n        ></TOC >\n        <Control onChangeMode={function (_mode) {\n          this.setState({\n            mode: _mode\n          });\n        }.bind(this)}></Control>\n        {this.getContent()}\n      </div >\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}