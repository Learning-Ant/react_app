{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-app\\\\workspace\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Subject from \"./components/Subject\";\nimport TOC from \"./components/TOC\";\nimport ReadContent from \"./components/ReadContent\";\nimport Control from \"./components/Control\";\nimport CreateContent from \"./components/CreateContent\";\nimport './App.css'; // 리턴되는 것은 최상위 노드는 항상 하나만 존재해야한다.\n// App이라는 클래스 내부에서 사용할 정보들은 state로써 저장한다\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode: 'create',\n      selected_content_id: 2,\n      subject: {\n        title: 'WEB',\n        sub: 'world wide web'\n      },\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'HTML is for information'\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'CSS is for design'\n      }, {\n        id: 3,\n        title: 'JavaScript',\n        desc: 'JavaScript is for interactive'\n      }]\n    };\n  }\n\n  render() {\n    var _title,\n        _desc,\n        _article = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === 'read') {\n      this.state.contents.forEach(content => {\n        if (content.id === this.state.selected_content_id) {\n          _title = content.title;\n          _desc = content.desc;\n          return false;\n        }\n      });\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this); // var i = 0;\n      // while (i < this.state.contents.length) {\n      //   var data = this.state.contents[i]\n      //   if (data.id === this.state.selected_content_id) {\n      //     _title = data.title;\n      //     _desc = data.desc;\n      //     break;\n      //   }\n      //   i += 1;\n      // }\n    } else if (this.state.mode === 'create') {\n      _article = /*#__PURE__*/_jsxDEV(CreateContent, {\n        onSubmit: function (_title, _desc) {\n          this.max_content_id += 1; // 기존 state를 직접적으로 변경하는 것보단\n          // 기존에 새로운 데이터를 추가한 데이터를 반환받아 사용하는 것이 좋다.\n\n          var _contents = this.state.contents.concat({\n            id: this.max_content_id,\n            title: _title,\n            desc: _desc\n          });\n\n          this.setState({\n            contents: result\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Subject, {\n        title: this.state.subject.title,\n        sub: this.state.subject.sub,\n        onChangePage: function () {\n          this.setState({\n            mode: 'welcome'\n          });\n        }.bind(this) // 사용자 정의 이벤트 설치  \n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TOC, {\n        onChangePage: function (id) {\n          this.setState({\n            mode: 'read',\n            selected_content_id: Number(id)\n          });\n        }.bind(this),\n        data: this.state.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        onChangeMode: function (_mode) {\n          this.setState({\n            mode: _mode\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), _article]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react-app/workspace/src/App.js"],"names":["React","Component","Subject","TOC","ReadContent","Control","CreateContent","App","constructor","props","max_content_id","state","mode","selected_content_id","subject","title","sub","welcome","desc","contents","id","render","_title","_desc","_article","forEach","content","_contents","concat","setState","result","bind","Number","_mode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Subject from \"./components/Subject\"\nimport TOC from \"./components/TOC\"\nimport ReadContent from \"./components/ReadContent\"\nimport Control from \"./components/Control\"\nimport CreateContent from \"./components/CreateContent\"\nimport './App.css';\n\n// 리턴되는 것은 최상위 노드는 항상 하나만 존재해야한다.\n// App이라는 클래스 내부에서 사용할 정보들은 state로써 저장한다\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode: 'create',\n      selected_content_id: 2,\n      subject: { title: 'WEB', sub: 'world wide web' },\n      welcome: { title: 'Welcome', desc: 'Hello, React!!' },\n      contents: [\n        { id: 1, title: 'HTML', desc: 'HTML is for information' },\n        { id: 2, title: 'CSS', desc: 'CSS is for design' },\n        { id: 3, title: 'JavaScript', desc: 'JavaScript is for interactive' }\n      ]\n    }\n  }\n\n  render() {\n    var _title, _desc, _article = null;\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title\n      _desc = this.state.welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n    } else if (this.state.mode === 'read') {\n      this.state.contents.forEach(content => {\n        if (content.id === this.state.selected_content_id) {\n          _title = content.title;\n          _desc = content.desc;\n          return false;\n        }\n      })\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n      // var i = 0;\n      // while (i < this.state.contents.length) {\n      //   var data = this.state.contents[i]\n      //   if (data.id === this.state.selected_content_id) {\n      //     _title = data.title;\n      //     _desc = data.desc;\n      //     break;\n      //   }\n      //   i += 1;\n      // }\n    } else if (this.state.mode === 'create') {\n      _article = <CreateContent onSubmit={function (_title, _desc) {\n        this.max_content_id += 1;\n        // 기존 state를 직접적으로 변경하는 것보단\n        // 기존에 새로운 데이터를 추가한 데이터를 반환받아 사용하는 것이 좋다.\n        var _contents = this.state.contents.concat(\n          { id: this.max_content_id, title: _title, desc: _desc }\n        );\n        this.setState({\n          contents: result\n        });\n      }.bind(this)}></CreateContent>\n    }\n    return (\n      <div className=\"App\">\n        <Subject\n          title={this.state.subject.title}\n          sub={this.state.subject.sub}\n          onChangePage={function () {\n            this.setState({ mode: 'welcome' });\n          }.bind(this)}\n        // 사용자 정의 이벤트 설치  \n        ></Subject>\n        <TOC\n          onChangePage={function (id) {\n            this.setState({\n              mode: 'read',\n              selected_content_id: Number(id)\n            })\n          }.bind(this)}\n          data={this.state.contents}\n        ></TOC >\n        <Control onChangeMode={function (_mode) {\n          this.setState({\n            mode: _mode\n          });\n        }.bind(this)}></Control>\n        {_article}\n      </div >\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}